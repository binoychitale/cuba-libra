from modules.objects import generate_test_configs
from validator import *


class RunDiemBFT(process):
    def setup(test_config: TestConfig):
        self.test_config = test_config

    def run():
        f = (test_config.nvalidators - 1) // 3
        validators = new(Validator, num=test_config.nvalidators)
        validator_map = {idx: validator for idx, validator in enumerate(validators)}
        kv_pairs_map = {
            idx: test_config.key_pairs[idx] for idx, _ in enumerate(validators)
        }
        for idx, validator in enumerate(validators):
            setup(
                {
                    validator,
                },
                (
                    validators - {validator},
                    idx,
                    f,
                    test_config.key_pairs[idx],
                    test_config.public_key_map,
                    validator_map,
                    kv_pairs_map,
                ),
            )
        start(validators)


def main():
    config(clock="Lamport")
    configs = generate_test_configs()
    for config in configs:
        p = new(RunDiemBFT)
        setup(p, (config,))
        start(p)
        break
